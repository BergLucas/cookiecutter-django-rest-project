services:
  api:
    labels:
      - traefik.enable=true
      - traefik.docker.network=web_network
      - traefik.http.routers.{{ cookiecutter.project_slug }}.rule=Host(`${API_HOST?Missing api host}`)
      # - traefik.http.routers.{{ cookiecutter.project_slug }}.tls=true
      # - traefik.http.routers.{{ cookiecutter.project_slug }}.tls.certresolver=letsencrypt
      - traefik.http.services.{{ cookiecutter.project_slug }}.loadbalancer.server.port=8000
    environment:
      - ALLOWED_HOSTS=${API_HOST?Missing api host}
      - CORS_ALLOWED_ORIGINS=http://${API_HOST?Missing api host}:8000
      # - CORS_ALLOWED_ORIGINS=https://${API_HOST?Missing api host}:8000
      - CSRF_TRUSTED_ORIGINS=http://${API_HOST?Missing api host}:8000
      # - CSRF_TRUSTED_ORIGINS=https://${API_HOST?Missing api host}:8000
      - STATIC_URL=static/
    volumes:
      - static_data:/static:rw
    networks:
      - web_network

  static:
    image: nginx:1.27-alpine
    labels:
      - traefik.enable=true
      - traefik.docker.network=web_network
      - traefik.http.routers.{{ cookiecutter.project_slug }}-static.rule=Host(`${API_HOST?Missing api host}`) && PathPrefix(`/static`)
      # - traefik.http.routers.{{ cookiecutter.project_slug }}-static.tls=true
      # - traefik.http.routers.{{ cookiecutter.project_slug }}-static.tls.certresolver=letsencrypt
      - traefik.http.services.{{ cookiecutter.project_slug }}-static.loadbalancer.server.port=80
    volumes:
      - static_data:/usr/share/nginx/html/static:ro
    networks:
      - web_network
    depends_on:
      - api

networks:
  web_network:
    name: web_network
    external: true

volumes:
  static_data:
